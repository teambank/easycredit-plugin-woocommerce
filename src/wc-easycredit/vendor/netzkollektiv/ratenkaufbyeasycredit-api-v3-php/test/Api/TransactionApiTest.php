<?php
/**
 * TransactionApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  Teambank\RatenkaufByEasyCreditApiV3
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ratenkauf Verkauf-V3 API Definition
 *
 * Ratenkauf Verkauf-V3 API for ratenkauf App
 *
 * The version of the OpenAPI document: V3.65.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Teambank\RatenkaufByEasyCreditApiV3\Test\Api;

use \Teambank\RatenkaufByEasyCreditApiV3\Configuration;
use \Teambank\RatenkaufByEasyCreditApiV3\ApiException;
use \Teambank\RatenkaufByEasyCreditApiV3\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * TransactionApiTest Class Doc Comment
 *
 * @category Class
 * @package  Teambank\RatenkaufByEasyCreditApiV3
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class TransactionApiTest extends TestCase
{
    protected $apiInstance = null;

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
        $config = \Teambank\RatenkaufByEasyCreditApiV3\Configuration::getDefaultConfiguration()
            ->setHost('https://ratenkauf.easycredit.de')
            ->setUsername($_ENV['EASYCREDIT_USER'])
            ->setPassword($_ENV['EASYCREDIT_PASSWORD']);

        $this->apiInstance = new \Teambank\RatenkaufByEasyCreditApiV3\Service\TransactionApi(
            new \Teambank\RatenkaufByEasyCreditApiV3\Client(['debug'=>false]),
            $config
        );
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for apiPaymentV3TransactionPost
     *
     * Initiates a transaction based on the given request.
     *
     */
    public function testApiPaymentV3TransactionPost()
    {
        $request = $this->getTransactionInitRequest();

        list($response, $statusCode, $headers) = $this->apiInstance
            ->apiPaymentV3TransactionPostWithHttpInfo($request);
            
        $this->assertSame(201, $statusCode);
        $this->assertNotEmpty($response->getTechnicalTransactionId());
    }

    /**
     * Test case for apiPaymentV3TransactionPost
     *
     * Initiates a transaction based on the given request.
     *
     */
    public function testApiPaymentV3TransactionPostShippingDiffersBilling()
    {
        $request = $this->getTransactionInitRequest();

        $invoiceAddress = $request->getOrderDetails()
            ->getInvoiceAddress();
        $invoiceAddress->setZip('12345');

        $this->expectException(\Teambank\RatenkaufByEasyCreditApiV3\ApiException::class);
        $this->expectExceptionMessage('orderDetails.invoiceAddress');

        list($response, $statusCode, $headers) = $this->apiInstance
            ->apiPaymentV3TransactionPostWithHttpInfo($request);
    }

    public function testApiPaymentV3TransactionPostOrderValueOutOfRange()
    {
        $request = $this->getTransactionInitRequest();

        $orderDetails = $request->getOrderDetails();
        $orderDetails->setOrderValue(20);

        $this->expectException(\Teambank\RatenkaufByEasyCreditApiV3\ApiException::class);
        $this->expectExceptionMessage('orderValue');

        list($response, $statusCode, $headers) = $this->apiInstance
            ->apiPaymentV3TransactionPostWithHttpInfo($request);
    }

    public function testApiPaymentV3TransactionPostAccountNameDiffers()
    {
        $request = $this->getTransactionInitRequest();

        $customer = $request->getCustomer();
        $customer->setFirstname('flaR');

        $this->expectException(\Teambank\RatenkaufByEasyCreditApiV3\ApiException::class);
        $this->expectExceptionMessage('orderDetails.shippingAddress');

        list($response, $statusCode, $headers) = $this->apiInstance
            ->apiPaymentV3TransactionPostWithHttpInfo($request);
    }

    public function testApiPaymentV3TransactionPostInvalidCustomerSince()
    {
        $request = $this->getTransactionInitRequest();

        $customer = $request->getCustomerRelationship();
        $customer->setCustomerSince('d');

        $this->expectException(\Teambank\RatenkaufByEasyCreditApiV3\ApiException::class);
        $this->expectExceptionMessage('Bad Request');

        list($response, $statusCode, $headers) = $this->apiInstance
            ->apiPaymentV3TransactionPostWithHttpInfo($request);
    }

    public function testApiPaymentV3TransactionPostIncompleteMobilePhoneNumber()
    {
        $request = $this->getTransactionInitRequest();

        $customer = $request->getCustomer();
        $customer->setContact(new \Teambank\RatenkaufByEasyCreditApiV3\Model\Contact([
            'email' => 'service@easycredit-ratenkauf.de',
            'mobilePhoneNumber' => null,
            'skipMobilePhoneNumberCheck' => null,
            'phoneNumber' => null
        ]));


        list($response, $statusCode, $headers) = $this->apiInstance
            ->apiPaymentV3TransactionPostWithHttpInfo($request);

        $this->assertSame(201, $statusCode);
        $this->assertNotEmpty($response->getTechnicalTransactionId());
    }

    public function testApiPaymentV3TransactionPostProductNumberOutOfRange()
    {
        $request = $this->getTransactionInitRequest();

        $orderDetails = $request->getOrderDetails();
        $orderDetails->setNumberOfProductsInShoppingCart(99999999999999999999999999999);

        list($response, $statusCode, $headers) = $this->apiInstance
            ->apiPaymentV3TransactionPostWithHttpInfo($request);

        $this->assertSame(201, $statusCode);
        $this->assertNotEmpty($response->getTechnicalTransactionId());
    }

    public function testApiPaymentV3TransactionPostLongProductCategory()
    {
        $request = $this->getTransactionInitRequest();

        $orderDetails = $request->getOrderDetails();
        $orderDetails->getShoppingCartInformation()[0]->setProductCategory('Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.  Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.  Nam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, At accusam aliquyam diam diam dolore dolores duo eirmod eos erat, et nonumy sed tempor et et invidunt justo labore Stet clita ea et gubergren, kasd magna no rebum. sanctus sea sed takimata ut vero voluptua. est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur');

        list($response, $statusCode, $headers) = $this->apiInstance
            ->apiPaymentV3TransactionPostWithHttpInfo($request);

        $this->assertSame(201, $statusCode);
        $this->assertNotEmpty($response->getTechnicalTransactionId());
    }

    public function testApiPaymentV3TransactionPostMissingHouseNumber()
    {
        $request = $this->getTransactionInitRequest();

        $orderDetails = $request->getOrderDetails();
        $orderDetails->getShippingAddress()->setAddress('Beuthener Str.');

        $this->expectException(\Teambank\RatenkaufByEasyCreditApiV3\ApiException::class);

        try {
            list($response, $statusCode, $headers) = $this->apiInstance
                ->apiPaymentV3TransactionPostWithHttpInfo($request);
        } catch (ApiException $e){
            $fullResponse = json_encode($e->getResponseObject());
            $this->assertStringNotContainsString('HNR_FEHLT', $fullResponse);
            throw $e;
        }
    }


    protected function getTransactionInitRequest() {
        return new \Teambank\RatenkaufByEasyCreditApiV3\Model\TransactionInitRequest([
            'financingTerm' => 12,
            'orderDetails' => new \Teambank\RatenkaufByEasyCreditApiV3\Model\OrderDetails([
                'orderValue' => 200,
                'orderId' => '100002345',
                'numberOfProductsInShoppingCart' => 1,
                'invoiceAddress' => new \Teambank\RatenkaufByEasyCreditApiV3\Model\Address([
                    'address' => 'Beuthener Str. 25',
                    'additionalAddressInformation' => 'z Hd. Herr Ralf Ratenkauf',
                    'zip' => '90471',
                    'city' => 'Nürnberg',
                    'country' => 'DE'
                ]),
                'shippingAddress' => new \Teambank\RatenkaufByEasyCreditApiV3\Model\ShippingAddress([
                    'firstName' => 'Ralf',
                    'lastName' => 'Ratenkauf',
                    'address' => 'Beuthener Str. 25',
                    'additionalAddressInformation' => 'z Hd. Herr Ralf Ratenkauf',
                    'zip' => '90471',
                    'city' => 'Nürnberg',
                    'country' => 'DE'
                ]),
                'shoppingCartInformation' => [
                    new \Teambank\RatenkaufByEasyCreditApiV3\Model\ShoppingCartInformationItem([
                        'productName' => 'E-Bike',
                        'quantity' => '1',
                        'price' => 2499.99,
                        'manufacturer' => 'Magetique',
                        'productCategory' => 'Bikes',
                        'articleNumber' => [
                            new \Teambank\RatenkaufByEasyCreditApiV3\Model\ArticleNumberItem([
                                'numberType' => 'sku',
                                'number' => 'magetique-ebike'
                            ])
                        ] 
                    ])
                ]
            ]),
            'shopsystem' => new \Teambank\RatenkaufByEasyCreditApiV3\Model\Shopsystem([
                'shopSystemManufacturer' => 'NETZKOLLEKTIV API Evaluation',
                'shopSystemModuleVersion' => '0.1'
            ]),
            'customer' => new \Teambank\RatenkaufByEasyCreditApiV3\Model\Customer([
                'gender' => \Teambank\RatenkaufByEasyCreditApiV3\Model\Customer::GENDER_MR,
                'firstName' => 'Ralf',
                'lastName' => 'Ratenkauf',
                'birthDate' => '1980-04-01',
                'birthName' => 'Ratenkauf',
                'birthPlace' => 'Fürth',
                'title' => \Teambank\RatenkaufByEasyCreditApiV3\Model\Customer::TITLE_DR,
                'contact' => new \Teambank\RatenkaufByEasyCreditApiV3\Model\Contact([
                    'email' => 'service@easycredit-ratenkauf.de',
                    'mobilePhoneNumber' => '01701234567',
                    'skipMobilePhoneNumberCheck' => false,
                    'phoneNumber' => '0911 5390-2726'
                ]),
                'bank' => new \Teambank\RatenkaufByEasyCreditApiV3\Model\Bank([
                    'iban' => 'DE88100900001234567892'
                ]),
                'employment' => new \Teambank\RatenkaufByEasyCreditApiV3\Model\Employment([
                    'employmentType' => \Teambank\RatenkaufByEasyCreditApiV3\Model\Employment::EMPLOYMENT_TYPE_EMPLOYEE,
                    'monthlyNetIncome' => 1999.31
                ])
            ]),
            'customerRelationship' => new \Teambank\RatenkaufByEasyCreditApiV3\Model\CustomerRelationship([
                'customerStatus' => \Teambank\RatenkaufByEasyCreditApiV3\Model\CustomerRelationship::CUSTOMER_STATUS_NEW_CUSTOMER,
                'customerSince' => new \DateTime('1800-04-01'),
                'orderDoneWithLogin' => false,
                'numberOfOrders' => '2',
                'negativePaymentInformation' => \Teambank\RatenkaufByEasyCreditApiV3\Model\CustomerRelationship::NEGATIVE_PAYMENT_INFORMATION_NO_PAYMENT_DISRUPTION,
                'riskyItemsInShoppingCart' => true,
                'logisticsServiceProvider' => 'DHL Standard'        
            ]),
            'redirectLinks' => new \Teambank\RatenkaufByEasyCreditApiV3\Model\RedirectLinks([
                'urlSuccess' => 'http://google.de/success',
                'urlCancellation' => 'http://google.de/cancel',
                'urlDenial' => 'http://google.de/denial'       
            ])
        ]);
    }
}
